% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simphony.R
\name{simphony}
\alias{simphony}
\title{Simulate feature abundance data}
\usage{
simphony(featureGroupsList, fracFeatures = NULL, nFeatures = 10,
  timepointsType = c("auto", "specified", "random"), timeRange = c(0,
  48), interval = 2, nReps = 1, timepoints = NULL,
  nSamplesPerCond = NULL, rhyFunc = sin, dispFunc = defaultDispFunc,
  family = c("gaussian", "negbinom"))
}
\arguments{
\item{featureGroupsList}{\code{data.frame} or \code{data.table} (for a single condition)
or list of \code{data.frame}s or \code{data.table}s (for multiple conditions), where
each row corresponds to a group of features to simulate. The following
columns are all optional:
\describe{
\item{fracFeatures}{Fraction of simulated features to allocate to each group.
Defaults to 1/(number of groups).}
\item{base}{Average abundance. Defaults to 0 if \code{family} == 'gaussian'
and to 8 (mean log2 counts) if \code{family} == 'negbinom'.}
\item{sd}{Standard deviation of sampled abundance values. Defaults to 1.
Only used if \code{family} == 'gaussian'.}
\item{dispFunc}{Function to calculate dispersion of sampled abundance
values, given expected abundance in counts. Only used if \code{family} ==
'negbinom'.}
\item{amp}{Amplitude of rhythmic abundance. Defaults to 0 (i.e.,
non-rhythmic.}
\item{phase}{Phase of rhythmic abundance, in the same units as \code{period}.
Defaults to 0.}
\item{period}{Integer for the period of simulated rhythms.}
\item{rhyFunc}{Function to generate rhythmic abundance. Must have a
period of 2*pi. Defaults to \code{sin}.}
}}

\item{fracFeatures}{Fraction of simulated features to allocate to each group.
Defaults to 1/(number of groups). Only used if the first \code{featureGroupsList}
\code{data.frame} lacks a \code{fracFeatures} column.}

\item{nFeatures}{Integer for the total number of features to simulate.}

\item{timepointsType}{Character string for how to set the timepoints
for the simulation. Must be 'auto' (default), 'specified', or 'random'.}

\item{timeRange}{Optional 2-element vector controlling the range of times to
sample in simulated data. Defaults to c(0, 48).}

\item{interval}{Integer for the amount of time between consecutive
timepoints, in the same units as \code{period}. The first timepoint is 0. Only
used if \code{timepointsType} == 'auto'.}

\item{nReps}{Integer for the number of replicates per timepoint. Only used
if \code{timepointsType} == 'auto'.}

\item{timepoints}{Numeric vector of exact timepoints to simulate, including
any replicates. Only used if \code{timepointsType} == 'specified'.}

\item{nSamplesPerCond}{Integer for the number of samples per condition,
which will be randomly uniformly spaced between 0 and \code{period} and
different for each condition. Only used if timepointsType == 'random'.}

\item{rhyFunc}{Function to generate rhythmic abundance. Must have a period
of 2*pi. Defaults to \code{sin}. Only used if a \code{data.frame} in \code{featureGroupsList}
lacks a \code{rhyFunc} column.}

\item{dispFunc}{Function to calculate dispersion of sampled abundance
values, given expected abundance in counts. Defaults to \code{defaultDispFunc}.
Only used if \code{family} == 'negbinom' and a \code{data.frame} in \code{featureGroupsList}
lacks a \code{dispFunc} column.}

\item{family}{Character string for the family of distributions from
which to generate the abundance values. Must be 'gaussian' or 'negbinom'.}
}
\value{
List with the following elements:
\describe{
\item{abundData}{Matrix of abundance values (counts, if \code{family} ==
'negbinom'), with features as rownames and samples as colnames.}
\item{sampleMetadata}{\code{data.table} with one row per sample.}
\item{featureMetadata}{\code{data.table} with one row per feature per condition.}
\item{experMetadata}{List of arguments that were passed to \code{simphony}.}
}
}
\description{
Simulate experiments in which rhythmic and non-rhythmic feature abundance is
measured at multiple timepoints in one or more conditions.
}
\examples{
library('data.table')

# Simulate data for features having one of three sets of rhythmic parameters.
featureGroups = data.table(amp = c(0, 1, 1), phase = c(0, 0, 6),
                           rhyFunc = c(cos, cos, sin))
simData = simphony(featureGroups)

# Simulate data for an experiment with specified timepoints and replicates.
featureGroups = data.table(amp = c(0, 1))
simData = simphony(featureGroups, timepointsType = 'specified',
                   timepoints = rep(seq(0, 6, 2), each = 2))

# Simulate data for features whose rhythmicity varies between two conditions.
featureGroupsList = list(data.table(amp = c(1, 2), phase = c(0, -3)),
                         data.table(amp = c(3, 2), phase = c(0, 3)))
simData = simphony(featureGroupsList)

# Simulate data for 100 features, half non-rhythmic and half rhythmic, with
# amplitudes for rhythmic features sampled from a log-normal distribution.
nFeatures = 100
rhyFrac = 0.5
nRhyFeatures = round(rhyFrac * nFeatures)
rhyAmps = exp(rnorm(nRhyFeatures, mean = 0, sd = 0.25))
fracFeatures = c(1 - rhyFrac, rep(rhyFrac / nRhyFeatures, nRhyFeatures))
featureGroups = data.table(amp = c(0, rhyAmps), fracFeatures = fracFeatures)
simData = simphony(featureGroups, nFeatures = nFeatures)

# Simulate data for 100 rhythmic features, with baseline log2 expected counts
# and residual log dispersion sampled from distributions whose parameters
# were estimated, using DESeq2 and fitdistrplus, from circadian RNA-seq data
# from mouse liver (PRJNA297287).
nFeatures = 100
baseLog2Counts = rnorm(nFeatures, mean = 8.63, sd = 2.73)
dispFactors = exp(rnorm(nFeatures, sd = 0.819))
dispFuncs = sapply(dispFactors, function(z) {function(x) defaultDispFunc(x) * z})
featureGroups = data.table(base = baseLog2Counts, dispFunc = dispFuncs, amp = 1)
simData = simphony(featureGroups, nFeatures = nFeatures, family = 'negbinom')

}
\seealso{
\code{\link{defaultDispFunc}}, \code{\link{getExpectedAbund}},
\code{\link{getSampledAbund}}, \code{\link{mergeSimData}}
}
